(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{208:function(e,t,i){"use strict";var n=i(73);i.n(n).a},219:function(e,t,i){"use strict";i.r(t);i(208);var n=i(0),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("ProfileSection",{attrs:{frontmatter:e.$page.frontmatter}}),e._v(" "),i("h2",{attrs:{id:"about-me"}},[e._v("About Me")]),e._v(" "),i("p",[e._v("I am an associate professor in State Key Laboratory of Processors (SKLP), Institute of Computing Technology (ICT), and work in IC design group led by Prof. Xiaowei Li and Prof. Huawei Li. I got my B.Eng degree and M.Eng degree from Harbin Institute of Technology in 2007 and 2009 respectively. I got my Ph.D degree from The University of Hong Kong advised by Prof. Hayden So in 2016. I also worked as a research fellow in Xtra group led by Prof. Bingsheng He in National University of Singapore from 2016 to 2018. My research interest includes domain specific architecture and system, in-storage processing, reconfigurable computing, and fault-tolerant computing.")]),e._v(" "),i("h2",{attrs:{id:"vancancies"}},[e._v("Vancancies")]),e._v(" "),i("p",[e._v("I am looking for self-motivated intern students. Students with EE and CS background are preferred. For intern students, it is possible to work fully remotely. Topics for interns are listed as follows. If you are interested in my research, contact me with email.")]),e._v(" "),i("ul",[i("li",[e._v("AI for circuit design and optimization")]),e._v(" "),i("li",[e._v("Automatic neural network accelerator customization on FPGAs")]),e._v(" "),i("li",[e._v("Light-weight neural network acceleration on the edge")]),e._v(" "),i("li",[e._v("DSL-based graph processing accelerator and system")]),e._v(" "),i("li",[e._v("In-storage big data processing systems (graph processing and information retriveal)")]),e._v(" "),i("li",[e._v("Reliable AI toolchain development")])]),e._v(" "),i("h2",{attrs:{id:"news"}},[e._v("News")]),e._v(" "),i("ul",[i("li",[e._v("[June 2020] Shengwen Liang and Rick Lee won the Third Prize (FPGA Track) of the 2020 IEEE Low-Power Computer Vision Challenge ("),i("a",{attrs:{href:"https://lpcv.ai/",target:"_blank",rel:"noopener noreferrer"}},[e._v("LPCVC"),i("OutboundLink")],1),e._v(").")]),e._v(" "),i("li",[e._v("[July 2022] Haitong Huang, Erjing Luo, and Cangyuan Li in my group got the Third Place in DAC'22 SDC.")]),e._v(" "),i("li",[e._v("[Jan. 2023] "),i("font",{attrs:{color:"red"}},[e._v(' Our work "EnGN: A High-Throughput and Energy-Efficient Accelerator for Large Graph Neural Networks" won the Best Paper Award of TC\'21. ')])],1),e._v(" "),i("li",[e._v("[Jan. 2023] "),i("font",{attrs:{color:"red"}},[e._v(' Our work "S2Loop: a Lightweight Spectral-Spatio Loop Closure Detector for Resource-Constrained Platforms" is accepted by IEEE Robotics and Automation Letters.')])],1),e._v(" "),i("li",[e._v("[Jan. 2023] "),i("font",{attrs:{color:"red"}},[e._v(' Our work "MA-BERT: Towards Matrix Arithmetic-only BERT Inference by Eliminating Complex Non-linear Functions" is accepted by ICLR\'23')])],1),e._v(" "),i("li",[e._v("[Apr. 2023] "),i("font",{attrs:{color:"red"}},[e._v(' Our work "Statistical Modeling of Soft Error Influence on Neural Networks" is accepted by TCAD\'23.')])],1),e._v(" "),i("li",[e._v("[May 2023] "),i("font",{attrs:{color:"red"}},[e._v(' Our work "Accelerating Deformable Convolution Networks with Dynamic and Irregular Memory Accesses" is accepted by TODAES\'23.')])],1),e._v(" "),i("li",[e._v("[May 2023] "),i("font",{attrs:{color:"red"}},[e._v(' Our work "Layer-Puzzle: Allocating and Scheduling Multi-Task on Multi-Core NPUs By Using Layer Heterogeneity" is accepted by DATE\'23.')])],1),e._v(" "),i("li",[e._v("[June 2023] "),i("font",{attrs:{color:"red"}},[e._v(" Congratulations! Haitong Huang, Erjing Luo, and Guoyu Li got into Top 3 in DAC'23 SDC.")])],1)]),e._v(" "),i("h2",{attrs:{id:"projects"}},[e._v("Projects")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("TaijiGraph: Large-scale graph processing accelerator and system")]),e._v(" (Ongoing)")])]),e._v(" "),i("p",[e._v("By offering in-storage computing facilities with massive bandwidth to the stored data, computational storage devices (CSDs) promise to address the I/O bottleneck of out-of-core graph processing systems that operate on large graphs.\nUnfortunately, despite their I/O advantages, the in-storage computing capability as well as the memory capacity of existing CSDs can be up to two orders of magnitude lower than the host system, shifting the bottleneck from I/O to computing if CSDs alone were used to process large graphs. To address this problem, we propose TaijiGraph, which combines the weak computing engine inside a CSD that has high I/O bandwidth with powerful host processors that have limited I/O bandwidth to achieve high overall performance for out-of-core graph processing.\nTaijiGraph leverages the strengths of the two computing systems by partitioning the input graph according to the degree of a vertex and dynamically assigning workloads to the host and the CSD subsequently. High-degree vertices, which typically result in a higher compute-to-memory ratio in many graph kernels, are processed by the host, while low-degree vertices that typically result in a lower compute-to-memory ratio are processed by the CSD. In addition, a linear performance predictor that depends on the number of active vertices and edges is developed to capture the dynamics of the graph processing tasks across the partitions and iterations.\nUsing this performance predictor, a lightweight runtime scheduler that dynamically offloads I/O-intensive graph processing tasks to CSD while leaving computing-intensive tasks on the host is proposed. On a system using a Cosmos+ OpenSSD prototype with a 30X weaker in-storage processor than the host, when compared to GraphChi and GridGraph implemented on the same system using a wide range of large graphs, TaijiGraph achieves an average performance speedup of 6.41X and 2.62X while reducing data transmission between the host and the CSD by 13.94X and 6.52X respectively, making it promising for use in future disaggregated computing and storage systems.")]),e._v(" "),i("p",[e._v("["),i("a",{attrs:{href:"https://anonymous.4open.science/r/TaijiGraph2022",target:"_blank",rel:"noopener noreferrer"}},[e._v("TaijiGraph on Computational Storage"),i("OutboundLink")],1),e._v("]")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("RobustDL: Robust deep learning toolchain")]),e._v(" (Ongoing)")])]),e._v(" "),i("p",[e._v("We mainly investigate the design of deep learning toolchains all the way from deep learning applications to low-level circuit designs. Specifically, we explore model-independent fault-tolerant algorithm design, model-dependent fault-tolerant algorithm design, fault-tolerant compilation, fault-tolerant architecture design, fault-tolerant circuit design, and cross-layer fault-tolerant designs. In addition, we also develop a set of fault injection tools from different perspectives to assist fault-tolerant design at different abstraction levels.")]),e._v(" "),i("p",[e._v("["),i("a",{attrs:{href:"https://github.com/fffasttime/MR-Neural-Network-Reliability-Analysis-Toolbox",target:"_blank",rel:"noopener noreferrer"}},[e._v("Multi-Resolution Fault Injection Tools"),i("OutboundLink")],1),e._v("]")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("AutoDSA: Automatic domain-specific accelerator generation (Ongoing)")])])]),e._v(" "),i("p",[e._v("Mixed-precision neural networks (MPNNs) that enable the use of just enough data width for a deep learning task promise significant advantages of both inference accuracy and computing overhead. FPGAs with fine-grained reconfiguration capability can adapt the processing with distinct data width and models, and hence, can theoretically unleash the potential of MPNNs. Nevertheless, commodity DPUs on FPGAs mostly emphasize the generality and have limited support for MPNNs especially the ones with lower data width. In addition, primitive DSPs in FPGAs usually have much larger data width than that is required by MPNNs and haven’t been sufficiently co-explored with MPNNs yet. To this end, we propose an open source MPNN accelerator design framework specifically tailored for FPGAs. In this framework, we have a systematic DSP-packing algorithm to pack multiple lower data width MACs in a single primitive DSP and enable efficient implementation of MPNNs. Meanwhile, we take the DSP-packing efficiency into consideration with MPNN quantization within a unified neural network architecture search (NAS) framework such that it can be aware of the DSP overhead during quantization and optimize the MPNN performance and accuracy concurrently. Finally, we have the optimized MPNN fine-tuned to a fully pipelined neural network accelerator template based on HLS and make best use of available resources for higher performance. Our experiments reveal the resulting accelerators produced by the proposed framework can achieve overwhelming advantages in terms of performance, resource utilization, and inference accuracy for MPNNs when compared with both hand-crafted counterparts and prior hardware-aware neural network accelerators on FPGAs.")]),e._v(" "),i("p",[e._v("["),i("a",{attrs:{href:"https://anonymous.4open.science/r/NASPacking-8B1F/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Mixed Precision Neural Network Acceleration on FPGAs"),i("OutboundLink")],1),e._v("]")]),e._v(" "),i("p",[e._v("["),i("a",{attrs:{href:"https://github.com/Liu-Cheng/bfs_with_Intel_OpenCL.git",target:"_blank",rel:"noopener noreferrer"}},[e._v("BFS Acceleration with Intel OpenCL"),i("OutboundLink")],1),e._v("]")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("DeepBurning: Automatic generation of FPGA-based learning accelerators for the neural network family")]),e._v(" (2018-2020)")])]),e._v(" "),i("p",[e._v("DeepBurning is an end-to-end automatic neural network accelerator design tool for specialized learning tasks. It provides a unified deep learning acceleration solution to high-level application designers without dealing with the model training and hardware accelerator tuning. You can refer to DeepBurning homepage for more details.")]),e._v(" "),i("p",[e._v("["),i("a",{attrs:{href:"https://github.com/groupsada/DeepBurning",target:"_blank",rel:"noopener noreferrer"}},[e._v("DeepBurning Project"),i("OutboundLink")],1),e._v("]")]),e._v(" "),i("ul",[i("li",[i("strong",[e._v("QuickDough: A rapid loop acceleration on closely coupled CPU-FPGA architectures")]),e._v(" (2011-2016)")])]),e._v(" "),i("p",[e._v("QuickDough is developed to address the FPGA design productivity problem. By utilizing a soft coarse-grained reconfigurable array (SCGRA) overlay built on top of off-the-shelf FPGAs, it compiles a high-level loop to the overlay through a rapid operation scheduling first and then generates the FPGA accelerator bitstream through a rapid integration of the scheduling result and a pre-built overlay bitstream.")]),e._v(" "),i("p",[e._v("["),i("a",{attrs:{href:"https://github.com/Liu-Cheng/QuickDough",target:"_blank",rel:"noopener noreferrer"}},[e._v("QuickDough Project"),i("OutboundLink")],1),e._v("]")]),e._v(" "),i("h2",{attrs:{id:"funding"}},[e._v("Funding")]),e._v(" "),i("ul",[i("li",[e._v("Automatic Cross-Layer DSA Design and Optimization, 1 600 000￥, National Key Research and Development Program of China(2023-2025)")]),e._v(" "),i("li",[e._v("Intelligent In-Storage Big Data Processing System, 1 300 000￥, 1XX(2023-2024)")]),e._v(" "),i("li",[e._v("Fault-tolerant Deep Learning Toolchain for COTS Devices, 300 000￥, XXX(2023)")]),e._v(" "),i("li",[e._v("Elastic Fault-tolerant Deep Learning Processor Design, 570 000￥, NSFC(2022-2025)")]),e._v(" "),i("li",[e._v("Customized Energy-efficient Graph Processing Acceleration on FPGAs, 300 000￥, NSFC(2020-2022)")]),e._v(" "),i("li",[e._v("Fault-tolerant Deep Learning Processor Design Automation, 300 000￥, SKLCA(2021-2022)")])]),e._v(" "),i("h2",{attrs:{id:"services"}},[e._v("Services")]),e._v(" "),i("ul",[i("li",[e._v("PC for:\n"),i("ul",[i("li",[e._v("DFT'22, FPT'22, ATS'23, FPT'23, DFT'23")])])]),e._v(" "),i("li",[e._v("Review for:\n"),i("ul",[i("li",[e._v("TPDS, TCAD, TC, TVLSI, JCST, TETC, JETC, IS")]),e._v(" "),i("li",[e._v("ITC'22, ITC'23, NIPS'23")])])])]),e._v(" "),i("h2",{attrs:{id:"graduate-students"}},[e._v("Graduate Students")]),e._v(" "),i("ul",[i("li",[e._v("Cheng Chu (Intern from Hefei University of Technology, PhD candidate in Indiana University Bloomington)")]),e._v(" "),i("li",[e._v("Meng He (Intern from Hefei University of Technology, 字节跳动)")]),e._v(" "),i("li",[e._v("Ziyang Zhu (Intern from Hefei University of Technology, 紫光展锐)")]),e._v(" "),i("li",[e._v("Qiang Zhang (Master Student, 快手)")]),e._v(" "),i("li",[e._v("Kouzi Xing (Intern from Hefei University of Technology, 商汤科技)")]),e._v(" "),i("li",[e._v("Li Li (Intern from Hefei University of Technology, 京东)")]),e._v(" "),i("li",[e._v("Kexin Chu (Intern from Hefei University of Technology, 百度)")]),e._v(" "),i("li",[e._v("Kaijie Tu (Intern from Hefei University of Technology, 计算所)")]),e._v(" "),i("li",[e._v("Chang Shi (Master student, Alibaba)")]),e._v(" "),i("li",[e._v("Peibin Wu (Master student, MSRA)")])])],1)}),[],!1,null,null,null);t.default=o.exports},73:function(e,t,i){}}]);